using System;using System.Text;using System.Text.RegularExpressions;namespace Salvini.IoTDB.Import;internal class Import{    public static async Task Run(string[] args)    {        var usage = @"Apache IoTDB 数据导如工具 v1.0.23.306--host=127.0.0.1--port=6667--user=root--pwd=admin#123--database=kylin调用示例如上, 去掉'--'将参数写入import.ini即可直接执行";        Console.Title = "Apache IoTDB 数据导出工具 v1.0.23.306";        Console.OutputEncoding = Encoding.UTF8;        Console.ForegroundColor = ConsoleColor.Magenta;        Console.WriteLine(usage);        Console.ResetColor();        var startTime = DateTime.Today.AddDays(-1);        var endTime = DateTime.Today;        var host = "127.0.0.1";        var user = "root";        var pwd = "admin#123";        var port = "6667";        var database = "kylin";        var directory = "./csv";        if (File.Exists("import.ini"))        {            var ini = await File.ReadAllLinesAsync("import.ini", Encoding.UTF8);            host = ini.FirstOrDefault(x => x.StartsWith("host="))?[5..] ?? host;            port = ini.FirstOrDefault(x => x.StartsWith("port="))?[5..] ?? port;            user = ini.FirstOrDefault(x => x.StartsWith("user="))?[5..] ?? user;            pwd = ini.FirstOrDefault(x => x.StartsWith("pwd="))?[4..] ?? pwd;            database = ini.FirstOrDefault(x => x.StartsWith("database="))?[9..] ?? database;            directory = ini.FirstOrDefault(x => x.StartsWith("directory="))?[10..] ?? directory;        }        host = args.FirstOrDefault(x => x.StartsWith("--host="))?[7..] ?? host;        port = args.FirstOrDefault(x => x.StartsWith("--port="))?[7..] ?? port;        user = args.FirstOrDefault(x => x.StartsWith("--user="))?[7..] ?? user;        pwd = args.FirstOrDefault(x => x.StartsWith("--pwd="))?[6..] ?? pwd;        database = args.FirstOrDefault(x => x.StartsWith("--database="))?[11..] ?? database;        directory = args.FirstOrDefault(x => x.StartsWith("--directory="))?[12..] ?? directory;        var client = new TimeSeriesClient($"iotdb://{user}:{pwd}@{host}:{port}/admin?database={database}");        var files = Directory.GetFiles(directory, "*.csv");        if (files.Any(x => !Regex.IsMatch(x, "\\d{4}\\-\\d{2}\\-\\d{2}(\\.csv)")))        {            var file = files.First(x => !Regex.IsMatch(x, "\\d{4}\\-\\d{2}\\-\\d{2}(\\.csv)"));            var lines = await File.ReadAllLinesAsync(file);            if (lines[0] == "点名[tag|_id],类型[type],单位[unit],描述[desc]")            {                var points = lines.Skip(1).Select(x => x.Split(',')).Select(x => (x[0], x[1], x[2], x[3])).ToList();                await client.InitializeAsync(points, true);            }         }        var data = files.Where(x => Regex.IsMatch(x, "\\d{4}\\-\\d{2}\\-\\d{2}(\\.csv)")).ToArray();        await client.DataFromCsvAsync(data);    }}